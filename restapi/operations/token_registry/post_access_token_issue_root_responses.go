// Code generated by go-swagger; DO NOT EDIT.

package token_registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cybercert-blockchain-api/models"
)

// PostAccessTokenIssueRootCreatedCode is the HTTP code returned for type PostAccessTokenIssueRootCreated
const PostAccessTokenIssueRootCreatedCode int = 201

/*
PostAccessTokenIssueRootCreated OK

swagger:response postAccessTokenIssueRootCreated
*/
type PostAccessTokenIssueRootCreated struct {

	/*
	  In: Body
	*/
	Payload *models.CreatedResponse `json:"body,omitempty"`
}

// NewPostAccessTokenIssueRootCreated creates PostAccessTokenIssueRootCreated with default headers values
func NewPostAccessTokenIssueRootCreated() *PostAccessTokenIssueRootCreated {

	return &PostAccessTokenIssueRootCreated{}
}

// WithPayload adds the payload to the post access token issue root created response
func (o *PostAccessTokenIssueRootCreated) WithPayload(payload *models.CreatedResponse) *PostAccessTokenIssueRootCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post access token issue root created response
func (o *PostAccessTokenIssueRootCreated) SetPayload(payload *models.CreatedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAccessTokenIssueRootCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAccessTokenIssueRootUnauthorizedCode is the HTTP code returned for type PostAccessTokenIssueRootUnauthorized
const PostAccessTokenIssueRootUnauthorizedCode int = 401

/*
PostAccessTokenIssueRootUnauthorized Unauthorized

swagger:response postAccessTokenIssueRootUnauthorized
*/
type PostAccessTokenIssueRootUnauthorized struct {
}

// NewPostAccessTokenIssueRootUnauthorized creates PostAccessTokenIssueRootUnauthorized with default headers values
func NewPostAccessTokenIssueRootUnauthorized() *PostAccessTokenIssueRootUnauthorized {

	return &PostAccessTokenIssueRootUnauthorized{}
}

// WriteResponse to the client
func (o *PostAccessTokenIssueRootUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// PostAccessTokenIssueRootInternalServerErrorCode is the HTTP code returned for type PostAccessTokenIssueRootInternalServerError
const PostAccessTokenIssueRootInternalServerErrorCode int = 500

/*
PostAccessTokenIssueRootInternalServerError Internal Server Error

swagger:response postAccessTokenIssueRootInternalServerError
*/
type PostAccessTokenIssueRootInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewPostAccessTokenIssueRootInternalServerError creates PostAccessTokenIssueRootInternalServerError with default headers values
func NewPostAccessTokenIssueRootInternalServerError() *PostAccessTokenIssueRootInternalServerError {

	return &PostAccessTokenIssueRootInternalServerError{}
}

// WithPayload adds the payload to the post access token issue root internal server error response
func (o *PostAccessTokenIssueRootInternalServerError) WithPayload(payload *models.APIResponse) *PostAccessTokenIssueRootInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post access token issue root internal server error response
func (o *PostAccessTokenIssueRootInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAccessTokenIssueRootInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
