// Code generated by go-swagger; DO NOT EDIT.

package token_registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cybercert-blockchain-api/models"
)

// PostAccessTokenIssueTransferableCreatedCode is the HTTP code returned for type PostAccessTokenIssueTransferableCreated
const PostAccessTokenIssueTransferableCreatedCode int = 201

/*
PostAccessTokenIssueTransferableCreated OK

swagger:response postAccessTokenIssueTransferableCreated
*/
type PostAccessTokenIssueTransferableCreated struct {

	/*
	  In: Body
	*/
	Payload *models.CreatedResponse `json:"body,omitempty"`
}

// NewPostAccessTokenIssueTransferableCreated creates PostAccessTokenIssueTransferableCreated with default headers values
func NewPostAccessTokenIssueTransferableCreated() *PostAccessTokenIssueTransferableCreated {

	return &PostAccessTokenIssueTransferableCreated{}
}

// WithPayload adds the payload to the post access token issue transferable created response
func (o *PostAccessTokenIssueTransferableCreated) WithPayload(payload *models.CreatedResponse) *PostAccessTokenIssueTransferableCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post access token issue transferable created response
func (o *PostAccessTokenIssueTransferableCreated) SetPayload(payload *models.CreatedResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAccessTokenIssueTransferableCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAccessTokenIssueTransferableUnauthorizedCode is the HTTP code returned for type PostAccessTokenIssueTransferableUnauthorized
const PostAccessTokenIssueTransferableUnauthorizedCode int = 401

/*
PostAccessTokenIssueTransferableUnauthorized Unauthorized

swagger:response postAccessTokenIssueTransferableUnauthorized
*/
type PostAccessTokenIssueTransferableUnauthorized struct {
}

// NewPostAccessTokenIssueTransferableUnauthorized creates PostAccessTokenIssueTransferableUnauthorized with default headers values
func NewPostAccessTokenIssueTransferableUnauthorized() *PostAccessTokenIssueTransferableUnauthorized {

	return &PostAccessTokenIssueTransferableUnauthorized{}
}

// WriteResponse to the client
func (o *PostAccessTokenIssueTransferableUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// PostAccessTokenIssueTransferableInternalServerErrorCode is the HTTP code returned for type PostAccessTokenIssueTransferableInternalServerError
const PostAccessTokenIssueTransferableInternalServerErrorCode int = 500

/*
PostAccessTokenIssueTransferableInternalServerError Internal Server Error

swagger:response postAccessTokenIssueTransferableInternalServerError
*/
type PostAccessTokenIssueTransferableInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewPostAccessTokenIssueTransferableInternalServerError creates PostAccessTokenIssueTransferableInternalServerError with default headers values
func NewPostAccessTokenIssueTransferableInternalServerError() *PostAccessTokenIssueTransferableInternalServerError {

	return &PostAccessTokenIssueTransferableInternalServerError{}
}

// WithPayload adds the payload to the post access token issue transferable internal server error response
func (o *PostAccessTokenIssueTransferableInternalServerError) WithPayload(payload *models.APIResponse) *PostAccessTokenIssueTransferableInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post access token issue transferable internal server error response
func (o *PostAccessTokenIssueTransferableInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAccessTokenIssueTransferableInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
