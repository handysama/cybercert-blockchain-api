// Code generated by go-swagger; DO NOT EDIT.

package token_registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cybercert-blockchain-api/models"
)

// PostAccessTokenQueryRecordsOKCode is the HTTP code returned for type PostAccessTokenQueryRecordsOK
const PostAccessTokenQueryRecordsOKCode int = 200

/*
PostAccessTokenQueryRecordsOK OK

swagger:response postAccessTokenQueryRecordsOK
*/
type PostAccessTokenQueryRecordsOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPostAccessTokenQueryRecordsOK creates PostAccessTokenQueryRecordsOK with default headers values
func NewPostAccessTokenQueryRecordsOK() *PostAccessTokenQueryRecordsOK {

	return &PostAccessTokenQueryRecordsOK{}
}

// WithPayload adds the payload to the post access token query records o k response
func (o *PostAccessTokenQueryRecordsOK) WithPayload(payload interface{}) *PostAccessTokenQueryRecordsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post access token query records o k response
func (o *PostAccessTokenQueryRecordsOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAccessTokenQueryRecordsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostAccessTokenQueryRecordsUnauthorizedCode is the HTTP code returned for type PostAccessTokenQueryRecordsUnauthorized
const PostAccessTokenQueryRecordsUnauthorizedCode int = 401

/*
PostAccessTokenQueryRecordsUnauthorized Unauthorized

swagger:response postAccessTokenQueryRecordsUnauthorized
*/
type PostAccessTokenQueryRecordsUnauthorized struct {
}

// NewPostAccessTokenQueryRecordsUnauthorized creates PostAccessTokenQueryRecordsUnauthorized with default headers values
func NewPostAccessTokenQueryRecordsUnauthorized() *PostAccessTokenQueryRecordsUnauthorized {

	return &PostAccessTokenQueryRecordsUnauthorized{}
}

// WriteResponse to the client
func (o *PostAccessTokenQueryRecordsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// PostAccessTokenQueryRecordsInternalServerErrorCode is the HTTP code returned for type PostAccessTokenQueryRecordsInternalServerError
const PostAccessTokenQueryRecordsInternalServerErrorCode int = 500

/*
PostAccessTokenQueryRecordsInternalServerError Internal Server Error

swagger:response postAccessTokenQueryRecordsInternalServerError
*/
type PostAccessTokenQueryRecordsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewPostAccessTokenQueryRecordsInternalServerError creates PostAccessTokenQueryRecordsInternalServerError with default headers values
func NewPostAccessTokenQueryRecordsInternalServerError() *PostAccessTokenQueryRecordsInternalServerError {

	return &PostAccessTokenQueryRecordsInternalServerError{}
}

// WithPayload adds the payload to the post access token query records internal server error response
func (o *PostAccessTokenQueryRecordsInternalServerError) WithPayload(payload *models.APIResponse) *PostAccessTokenQueryRecordsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post access token query records internal server error response
func (o *PostAccessTokenQueryRecordsInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAccessTokenQueryRecordsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
