// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CertificateInfo certificate info
//
// swagger:model CertificateInfo
type CertificateInfo struct {

	// certificate holder
	CertificateHolder string `json:"certificate_holder,omitempty"`

	// certificate id
	CertificateID string `json:"certificate_id,omitempty"`

	// certificate signature
	CertificateSignature string `json:"certificate_signature,omitempty"`

	// course name
	CourseName string `json:"course_name,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// extras
	Extras interface{} `json:"extras,omitempty"`

	// issued at
	IssuedAt string `json:"issued_at,omitempty"`

	// issuer name
	IssuerName string `json:"issuer_name,omitempty"`

	// module name
	ModuleName string `json:"module_name,omitempty"`

	// template ref
	TemplateRef string `json:"template_ref,omitempty"`
}

// Validate validates this certificate info
func (m *CertificateInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this certificate info based on context it is used
func (m *CertificateInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CertificateInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CertificateInfo) UnmarshalBinary(b []byte) error {
	var res CertificateInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
